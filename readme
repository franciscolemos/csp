The $rotation has the new created flights

Export the solution;
Calculate the cost;

Find the fixed flights; domains.fixed includes maint. however it will be tested in feas. functions
Create the matrix with all the possible rotations (combinatorial explosion)
Initialize the matrix dimensions with x height
Find the domains for each flight (-1, 0, 60, 120, 180, ..., 900, 960)
The domains are solely based on airport dep. and arr. capacity


Export the solution with the feasible rotations;
get the index of the current solution;
Cancel the itineraries that infeasible;
Calculate the cost;



When a rotation is found infeasible it becomes necessary to reconstruct it from the flight where it breaks by inserting each flight and checking their feasibility;
If a table is to be constructed with all possible combinations this could create a combinatorial explosion;
It does becomes necessary to use the Erdos Reniy method to generate the graph;
The probability pf generating a node should vary according to the scenario (flight: delay, cancellation; aircraft: breakdown; airport capacity: shortage)
Generate the probability function for the Erdos-Renyi graph generator
Generate the graph using the Erdos-Renyi method